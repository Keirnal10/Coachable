// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String    @id @default(cuid())
  email         String    @unique
  name          String?
  role          Role      @default(PLAYER)
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  videos        Video[]
  feedback      Feedback[]
  sentMessages  Message[] @relation("SentMessages")
  receivedMessages Message[] @relation("ReceivedMessages")
}

model Video {
  id          String    @id @default(cuid())
  title       String
  description String?
  url         String
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  userId      String
  user        User      @relation(fields: [userId], references: [id])
  feedback    Feedback[]
  clips       Clip[]
}

model Feedback {
  id          String    @id @default(cuid())
  content     String
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  userId      String
  videoId     String
  user        User      @relation(fields: [userId], references: [id])
  video       Video     @relation(fields: [videoId], references: [id])
  annotations Annotation[]
}

model Annotation {
  id          String    @id @default(cuid())
  type        String    // "text", "drawing", "voice"
  content     String
  timestamp   Float
  feedbackId  String
  feedback    Feedback  @relation(fields: [feedbackId], references: [id])
}

model Clip {
  id          String    @id @default(cuid())
  startTime   Float
  endTime     Float
  videoId     String
  video       Video     @relation(fields: [videoId], references: [id])
}

model Message {
  id          String    @id @default(cuid())
  content     String
  createdAt   DateTime  @default(now())
  senderId    String
  receiverId  String
  sender      User      @relation("SentMessages", fields: [senderId], references: [id])
  receiver    User      @relation("ReceivedMessages", fields: [receiverId], references: [id])
}

enum Role {
  ADMIN
  COACH
  PLAYER
  PARENT
}
